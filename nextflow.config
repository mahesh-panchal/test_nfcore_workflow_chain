params {
    workflow = 'viralrecon'
}

// Include fetchngs configuration
includeConfig 'subworkflows/fetchngs/nextflow.config'
if ( params.workflow == 'rnaseq' ) {
    // Include rnaseq configuration : WARNING: can override configuration defined above.
    includeConfig 'subworkflows/rnaseq/nextflow.config'
} else if ( params.workflow == 'viralrecon' ) {
    // Include viralrecon configuration
    includeConfig 'subworkflows/viralrecon/nextflow.config'
}
manifest {
    name            = 'nf-core/combo'
    author          = 'Mahesh Binzer-Panchal'
    homePage        = 'https://github.com/nf-core'
    description     = 'Nextflow FetchNGS, RNA-Seq, and Viralrecon analysis pipelines, part of the nf-core community.'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '0.1'
}

executor {
    memory = 60.GB
    cpus = 16
}

// FIXME:: Why does this need to be added again? Why is this not sourced from includeConfig?
// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
